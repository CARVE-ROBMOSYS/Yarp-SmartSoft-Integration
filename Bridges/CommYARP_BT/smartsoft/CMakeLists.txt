#--------------------------------------------------------------------------
# Code generated by the SmartSoft MDSD Toolchain
# The SmartSoft Toolchain has been developed by:
#  
# Service Robotics Research Center
# University of Applied Sciences Ulm
# Prittwitzstr. 10
# 89075 Ulm (Germany)
#
# Information about the SmartSoft MDSD Toolchain is available at:
# www.servicerobotik-ulm.de
#
# This file is generated once. Modify this file to your needs. 
# If you want the toolchain to re-generate this file, please 
# delete it before running the code generator.
#--------------------------------------------------------------------------
CMAKE_MINIMUM_REQUIRED(VERSION 3.0)

# find the SmartSoft CMake Macros (version 2 that uses CMake v3)
FIND_FILE(SMART_MACROS SmartMacros2.cmake PATHS $ENV{SMART_ROOT_ACE}/CMakeMacros /opt/smartSoftAce/CMakeMacros)
INCLUDE(${SMART_MACROS})

# Create and configure a CMake project for a CommunicationObject
SMART_COMMOBJECT_PROJECT()

# automatically build dependencies to other CommunicationObjects (if needed)
SMART_COMMOBJECT_AUTOBUILD_DEPENDENCIES()

#################################################################################
## here you can put all your project-specific compiler configurations          ##
## using regular CMake commands (like FIND_PACKAGE, INCLUDE_DIRECTORIES, etc.) ##

# you can add additional smartsoft utilities as follows:
#SMART_FIND_PACKAGE(SomePackageName)
#INCLUDE_DIRECTORIES(${SOMEPACKAGENAME_INCLUDE_DIRS})

# uncomment the following lines to activate data hash calculation (for debugging purposes)
#FIND_PACKAGE(Boost REQUIRED)
#INCLUDE_DIRECTORIES(${Boost_INCLUDE_DIRS})
#SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DENABLE_HASH")

# as communication objects are typically shared on various platforms,
# it is recommended to limit the external dependencies here as much as possible

FILE(GLOB_RECURSE SRC ${CMAKE_CURRENT_LIST_DIR}/src/*.cc)
FILE(GLOB_RECURSE SRC_GEN ${CMAKE_CURRENT_LIST_DIR}/src-gen/*.cc)

IF(WIN32)
	ADD_LIBRARY(${PROJECT_NAME} STATIC ${SRC} ${SRC_GEN})
ELSE()
	ADD_LIBRARY(${PROJECT_NAME} SHARED ${SRC} ${SRC_GEN})
ENDIF()

# link your external libraries here
#TARGET_LINK_LIBRARIES(${PROJECT_NAME} <your-libs>)

## end user-code                                                               ##
#################################################################################

# automaticall link to all dependent CommunicationObjects
SMART_COMMOBJECT_AUTOLINK_DEPENDENCIES()

# autoinstall all default CommunicationObject artefacts
SMART_COMMOBJECT_AUTOINSTALL()
