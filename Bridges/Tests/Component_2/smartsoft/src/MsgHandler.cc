//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// This file is generated once. Modify this file to your needs. 
// If you want the toolchain to re-generate this file, please 
// delete it before running the code generator.
//--------------------------------------------------------------------------
#include "MsgHandler.hh"
#include "Component_2.hh"

MsgHandler::MsgHandler(Smart::IQueryServerPattern<CommYARP_BT::CommTickCommand, CommYARP_BT::CommTickResult, SmartACE::QueryId>* server)
:	MsgHandlerCore(server)
{
	
}

MsgHandler::~MsgHandler()
{
	COMP->mutex.unlock();
}


void MsgHandler::handleQuery(const SmartACE::QueryId &id, const CommYARP_BT::CommTickCommand& request) 
{
	CommYARP_BT::CommTickResult answer;
	
	// implement your query handling logic here and fill in the answer object
	
	COMP->cmd = request;
	COMP->reqId = id;
	COMP->isNewData = true;

	std::cout << "COMPONENT 2 -> Got request [id " << id <<"] " << request << std::endl;

	COMP->gotNewData.notify_all();
//	COMP->mutex.unlock();
}
