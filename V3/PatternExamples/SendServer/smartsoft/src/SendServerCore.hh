//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// This file is generated once. Modify this file to your needs. 
// If you want the toolchain to re-generate this file, please 
// delete it before running the code generator.
//--------------------------------------------------------------------------
#ifndef _SENDSERVERCORE_HH
#define _SENDSERVERCORE_HH
	
#include "aceSmartSoft.hh"
#include <iostream>

#include <yarp/os/Bottle.h>							// Include communication data object from main YARP package
#include <yarp/smartsoft/SendPatternServer.h>		// Include RobMoSys compatible YARP port from interface library

/* Include log message facility (not mandatory).
 *
 * Decorates output messages.
 * When LOG_FORWARD_ENABLE is set to 1, each message is sent to yarplogger GUI via YARP network message for better readability.
 */
#include <yarp/os/LogStream.h>

// Define a callback handler

class MyRequestHandler : public yarp::smartsoft::SendPatternServerHandler<yarp::os::Bottle>
{
	virtual void handleSend(const yarp::os::Bottle& datum) throw() override
    {
    	yInfo() << "SendServer: received datum : " << datum.toString();
    }
};


class SendServerCore
{
public:
	SendServerCore();

	MyRequestHandler _handler;
	yarp::smartsoft::SendPatternServer<yarp::os::Bottle>  yarpSendServer;

};
	
#endif
