//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// This file is generated once. Modify this file to your needs. 
// If you want the toolchain to re-generate this file, please 
// delete it before running the code generator.
//--------------------------------------------------------------------------
#ifndef _BT_TICKHANDLER_USER_HH
#define _BT_TICKHANDLER_USER_HH
		
#include "BT_tickHandlerCore.hh"
#include <yarp/os/Bottle.h>

class BT_tickHandler : public BT_tickHandlerCore
{
private:
	bool isRunning{false};
	bool isGoalJointSpace{false};
	std::list<std::string> partList;

	bool halt();
	bool isJointTargetReached(std::string part);
	bool isCartesianTargetReached(std::string part);

	bool setNewJointTarget(yarp::os::Bottle *params);
	bool setNewCartesianTarget(yarp::os::Bottle *params);

public:
	BT_tickHandler(Smart::IQueryServerPattern<CommYARP_BT::CommTickCommand, CommYARP_BT::CommTickResult, SmartACE::QueryId>* server);
	virtual ~BT_tickHandler();
	virtual void handleQuery(const SmartACE::QueryId &id, const CommYARP_BT::CommTickCommand& request);
};
#endif
