//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// This file is generated once. Modify this file to your needs. 
// If you want the toolchain to re-generate this file, please 
// delete it before running the code generator.
//--------------------------------------------------------------------------
#ifndef _GENERICMOVEMENTSKILLCORE_HH
#define _GENERICMOVEMENTSKILLCORE_HH
	
#include "aceSmartSoft.hh"
#include <memory>
#include <iostream>

#include <yarp/os/Network.h>
#include <yarp/os/RpcClient.h>
#include <yarp/dev/PolyDriver.h>
#include <yarp/dev/IPositionControl.h>
#include "BT_tickHandler.hh"


class GenericMovementSkillCore
{
private:
	 yarp::os::Network yarp;

public:
	GenericMovementSkillCore();

	 yarp::dev::PolyDriver leftArmCb;
	 yarp::dev::PolyDriver rightArmCb;
	 yarp::dev::PolyDriver headCb;
	 yarp::dev::PolyDriver torsoCb;

	 std::map<std::string, yarp::dev::IPositionControl*> controlMap;

	 yarp::os::RpcClient cartesianLeftArm;
	 yarp::os::RpcClient cartesianRightArm;
	 yarp::os::RpcClient blackBoardRPC;

	 struct mem
	 {
		 CommYARP_BT::TickResult res;
		 bool isRunning;
	 };
	 std::map<std::string, CommYARP_BT::TickResult> statusMap;
	 bool useCartesian{false};
};
	
#endif
